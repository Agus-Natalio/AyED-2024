	public List<Integer> numerosImparesMayoresQuePreOrden(GeneralTree<Integer> a, Integer n) {
	    List<Integer> L = new LinkedList<Integer>();
	    List<GeneralTree<Integer>> children = a.getChildren();
	    if (a.getData() > n && a.getData() % 2 != 0) {
	        L.add(a.getData());
	    }
	    for (GeneralTree<Integer> child : children) {
	        L.addAll(numerosImparesMayoresQuePreOrden(child, n));
	    }
	    return L;
	}
